resources:
  repositories:
    - repository: ops_nonprod_cluster
      type: BitBucket
      endpoint: Bitbucket - spydersoft
      name: spydersoftteam/ops-nonprod-cluster
    - repository: ops_prod_cluster
      type: BitBucket
      endpoint: Bitbucket - spydersoft
      name: spydersoftteam/ops-prod-cluster
    - repository: templates
      type: BitBucket
      endpoint: "Bitbucket - spydersoft"
      name: spydersoftteam/azure-devops-templates

trigger:
  batch: true
  branches:
    include:
    - main 
    - feature/*
  paths:
    exclude:
    - README.md
    - scripts/*

pr: none

extends:
  ${{ if contains(variables['Build.SourceBranch'], 'main') }}:
    stages:
    - template: stages/stages-generate-commit-manifests/v1.yml@templates
      parameters:
        kubernetesConnectionName: "k8-nonprod"
        environmentName: "stage"
        namespace: "stage"
        helmfileDirectory: ./
        argoRepoName: ops_nonprod_cluster
        argoBaseDir: apps/home-automation

    - template: stages/stages-generate-commit-manifests/v1.yml@templates
      parameters:
        kubernetesConnectionName: "k8-prod"
        environmentName: "production"
        namespace: "production"
        helmfileDirectory: ./
        argoRepoName: ops_prod_cluster
        argoBaseDir: apps/home-automation
        pre_generate_steps:  
          - script: |
              git config --global user.email "gerega@gmail.com"
              git config --global user.name "CI/CD User"
              cd $(Build.SourcesDirectory)
              git checkout main
              
              cp $(Build.SourcesDirectory)/environments/stage/images.yaml $(Build.SourcesDirectory)/environments/production/images.yaml -f
              git add --all
              git commit -m "Promote Stage To Production"
              git push origin main
            displayName: Copy Stage Images to Production


  ${{ if not(contains(variables['Build.SourceBranch'], 'main')) }}:
    template: stages/stages-generate-commit-manifests/v1.yml@templates
    parameters:
      kubernetesConnectionName: "k8-nonprod"
      environmentName: "test"
      namespace: "test"
      helmfileDirectory: ./
      argoRepoName: ops_nonprod_cluster
      argoBaseDir: apps/home-automation


